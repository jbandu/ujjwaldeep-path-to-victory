-- Local bootstrap: create core tables if they don't exist
-- Safe to run multiple times due to IF NOT EXISTS

CREATE TABLE IF NOT EXISTS public.tests (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  owner_id uuid NOT NULL,
  mode text NOT NULL CHECK (mode IN ('chapter','difficulty_mix','pyp','custom')),
  config jsonb NOT NULL,
  total_marks integer,
  duration_sec integer NOT NULL,
  visibility text DEFAULT 'private' CHECK (visibility IN ('private','shared','school')),
  created_at timestamptz DEFAULT now()
);

CREATE TABLE IF NOT EXISTS public.questions (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  subject text NOT NULL,
  chapter text NOT NULL,
  topic text,
  stem text NOT NULL,
  options jsonb NOT NULL,
  correct_index integer CHECK (correct_index IS NULL OR correct_index BETWEEN 0 AND 3),
  explanation jsonb,
  difficulty integer DEFAULT 3 CHECK (difficulty BETWEEN 1 AND 5),
  language text DEFAULT 'English',
  source text DEFAULT 'Original',
  status text DEFAULT 'active',
  created_by uuid,
  created_at timestamptz DEFAULT now()
);

CREATE TABLE IF NOT EXISTS public.attempts (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  test_id uuid REFERENCES public.tests(id),
  user_id uuid, -- will be tightened by later migration
  started_at timestamptz DEFAULT now(),
  submitted_at timestamptz,
  score numeric,
  summary jsonb
);

CREATE TABLE IF NOT EXISTS public.items_attempted (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  attempt_id uuid NOT NULL REFERENCES public.attempts(id),
  question_id bigint NOT NULL REFERENCES public.questions(id),
  selected_index integer NOT NULL CHECK (selected_index BETWEEN 0 AND 3),
  correct boolean,
  time_ms integer DEFAULT 0
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_items_attempted_attempt_question
  ON public.items_attempted (attempt_id, question_id);

CREATE TABLE IF NOT EXISTS public.leaderboard_daily (
  day date NOT NULL,
  user_id uuid NOT NULL,
  points integer DEFAULT 0,
  PRIMARY KEY (day, user_id)
);

-- IMPORTANT: profiles (your prod schema references this)
CREATE TABLE IF NOT EXISTS public.profiles (
  user_id uuid PRIMARY KEY,
  full_name text,
  board text,
  medium text,
  class_level text CHECK (class_level IN ('XI','XII','Dropper')),
  state text,
  district text,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now(),
  language text DEFAULT 'English',
  is_admin boolean DEFAULT false,
  home_address text,
  home_lat double precision,
  home_lng double precision,
  exam_center_address text,
  exam_lat double precision,
  exam_lng double precision,
  exam_date timestamptz,
  exam_city text,
  exam_arrival_buffer_mins integer DEFAULT 45
);

-- Ensure print_packages exists locally before any policy references it
CREATE TABLE IF NOT EXISTS public.print_packages (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  test_id uuid NOT NULL REFERENCES public.tests(id),
  version integer NOT NULL DEFAULT 1,
  paper_pdf_url text NOT NULL,
  omr_pdf_url text NOT NULL,
  qr_payload jsonb NOT NULL,
  created_by uuid,
  created_at timestamptz DEFAULT now()
);

